cmake_minimum_required(VERSION "3.19.2")

project("main1")
set(CMAKE_CXX_STANDARD 17)

# set the output directory for built objects.
# This makes sure that the dynamic library goes into the build directory automatically.
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY "${CMAKE_BINARY_DIR}/$<CONFIGURATION>")
set(CMAKE_LIBRARY_OUTPUT_DIRECTORY "${CMAKE_BINARY_DIR}/$<CONFIGURATION>")

#set(CMAKE_CXX_FLAGS_DEBUG_INIT "-Wall")
#set(CMAKE_CXX_FLAGS_RELEASE_INIT "-Wall" "-O3")

add_subdirectory("thirdParty/SDL3" EXCLUDE_FROM_ALL)
add_subdirectory("thirdParty/glm" EXCLUDE_FROM_ALL)
find_package(Vulkan REQUIRED)


include_directories("thirdParty/imgui")
include_directories("thirdParty/stb")
include_directories("thirdParty/tinyobjloader")
include_directories("thirdParty/Vulkan/Include")

file(GLOB IMGUI_SOURCES
    "${CMAKE_SOURCE_DIR}/thirdParty/imgui/*.cpp"
    "${CMAKE_SOURCE_DIR}/thirdParty/imgui/backends/imgui_impl_sdl3.cpp"
    "${CMAKE_SOURCE_DIR}/thirdParty/imgui/backends/imgui_impl_vulkan.cpp"
)


# Create your game executable target as usual
add_executable("main1" "src/triangle.cpp" ${IMGUI_SOURCES})

target_compile_definitions("main1" PUBLIC RESOURCES_PATH="${CMAKE_CURRENT_SOURCE_DIR}/resources/")

# Link to the actual SDL3 library.
target_link_libraries("main1" PRIVATE "SDL3::SDL3" "Vulkan::Vulkan" "glm::glm")

